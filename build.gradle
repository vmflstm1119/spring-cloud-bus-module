plugins {
    id 'org.springframework.boot' version '2.7.0'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'application'
}

group 'com.sanha'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'org.springframework.boot'

    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
    compileJava.options.encoding = 'UTF-8'

    repositories {
        mavenCentral()
    }

    ext {
        set('springCloudVersion', "2021.0.3")
        set('springBootVersion', "2.7.0")
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.boot:spring-boot-dependencies:${ext['springBootVersion']}"
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${ext['springCloudVersion']}"
        }
        dependencies {

        }
    }

    dependencies {
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'

        implementation 'org.springframework.boot:spring-boot-starter'
        implementation 'org.springframework.cloud:spring-cloud-starter-config'
        implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap'

        testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
    }

    test {
        useJUnitPlatform()
    }
}

project(':M_DiscoveryService'){

    bootJar {
        mainClassName= 'com.sanha.eureka.EurekaServiceApplication'
        enabled = true;
    }

    jar {
        enabled = true;
    }

    dependencies {
        implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-server'
    }
}

project(':M_WingsGateWay'){

    bootJar {
        mainClassName= 'com.sanha.gateway.WingsGateWayApplication'
        enabled = true;
    }

    jar {
        enabled = true;
    }

    dependencies {
        implementation 'org.springframework.cloud:spring-cloud-starter-gateway'
        implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
        implementation 'org.springframework.boot:spring-boot-starter-actuator'
        implementation 'org.springframework.cloud:spring-cloud-starter-bus-kafka'
    }
}

project(':M_ConfigService'){

    bootJar {
        mainClassName= 'com.sanha.cloud.ConfigServiceApplication'
        enabled = true;
    }

    jar {
        enabled = true;
    }

    dependencies {
        implementation 'org.springframework.cloud:spring-cloud-config-server'
        implementation 'org.springframework.cloud:spring-cloud-starter-bus-kafka'
        implementation 'org.springframework.boot:spring-boot-starter-actuator'
    }
}

project(':M_SampleMSA1'){

    bootJar {
        mainClassName= 'com.sanha.wings.SampleMsa1Application'
        enabled = true;
    }

    jar {
        enabled = true;
    }

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
        implementation 'org.springframework.boot:spring-boot-starter-actuator'
        implementation 'org.springframework.cloud:spring-cloud-starter-bus-kafka'
    }
    tasks.register("prepareKotlinBuildScriptModel"){}
}

project(':M_SampleMSA2'){

    bootJar {
        mainClassName= 'com.sanha.wings.SampleMsa2Application'
        enabled = true;
    }

    jar {
        enabled = true;
    }

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
        implementation 'org.springframework.boot:spring-boot-starter-actuator'
        implementation 'org.springframework.cloud:spring-cloud-starter-bus-kafka'
    }
    tasks.register("prepareKotlinBuildScriptModel"){}
}


